<!doctype html>
<html>
  <head>
  </head>
  <body>
    <div class="container">
      <h1>WebSockets Chat App</h1>
      <div id="chat-log"></div>
      <div id="form">
        <input type="text" id="message">
        <button id="disconnect">Disconnect</button>
      </div>
    </div>

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script>
      
      // MH: I DON'T UNDERSTAND WHAT THIS LINE DOES
      var socket, host;

      // ws schema comes from HTML5
      // I think this is supposed to connect to the server created in app.rb
      host = "ws://localhost:3001";

      function connect() {
        try {
          
          // WebSocket is part of HTML5 websockets API
          socket = new WebSocket(host);

          // Ready State Constants - comes from API
          // 0 -- not yet open
          // 1 -- open and ready to communicate
          // 2 -- in the process of closing
          // 3 -- closed

          addMessage("Socket State: " + socket.readyState);

          socket.onopen = function() {
            addMessage("Socket Status: " + socket.readyState + " (open)");
          }

          socket.onclose = function() {
            addMessage("Socket Status: " + socket.readyState + " (closed)");
          }

          // callback fired when data received from server
          socket.onmessage = function(msg) {
            addMessage("Received: " + msg.data);
          }
        } catch(exception) {
          addMessage("Error: " + exception);
        }
      }

      function addMessage(msg) {
        $("#chat-log").append("<p>" + msg + "</p>");
      }

      function send() {
        var text = $("#message").val();
        if (text == '') {
          addMessage("Please Enter a Message");
          return;
        }

        try {
          // send data to server
          socket.send(text);
          addMessage("Sent: " + text)
        } catch(exception) {
          addMessage("Failed To Send")
        }

        // resets input field
        $("#message").val('');
      }

      $(function() {
        connect();
      });

      $('#message').keypress(function(event) {
        if (event.keyCode == '13') { send(); }
      });

      $("#disconnect").click(function() {
        socket.close()
      });
    </script>
  </body>
</html>
